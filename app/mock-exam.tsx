import React, { useState, useEffect } from "react";
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  ScrollView,
  Alert,
  ActivityIndicator,
} from "react-native";
import { useRouter } from "expo-router";
import { MockExam } from "../src/types/models";
import { MockExamRepository } from "../src/data/repositories/mock-exam-repository";
import { Screen } from "../src/components/layout/ResponsiveLayout";

export default function MockExamScreen() {
  const router = useRouter();
  const [mockExams, setMockExams] = useState<MockExam[]>([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    loadMockExams();
  }, []);

  const loadMockExams = async () => {
    try {
      const mockExamRepo = new MockExamRepository();
      const exams = await mockExamRepo.findAll();
      const activeExams = exams.filter((exam) => exam.is_active);
      setMockExams(activeExams);
    } catch (error) {
      console.error("Error loading mock exams:", error);
      Alert.alert("„Ç®„É©„Éº", "Ê®°Ë©¶„Éá„Éº„Çø„ÅÆË™≠„ÅøËæº„Åø„Å´Â§±Êïó„Åó„Åæ„Åó„Åü");
    } finally {
      setLoading(false);
    }
  };

  const startMockExam = (exam: MockExam) => {
    Alert.alert(
      "Ê®°Ë©¶ÈñãÂßãÁ¢∫Ë™ç",
      `${exam.name}„ÇíÈñãÂßã„Åó„Åæ„Åô„ÅãÔºü\n\nÂà∂ÈôêÊôÇÈñì: ${exam.time_limit_minutes}ÂàÜ\nÂêàÊ†ºÂü∫Ê∫ñ: ${exam.passing_score}ÁÇπ‰ª•‰∏ä`,
      [
        { text: "„Ç≠„É£„É≥„Çª„É´", style: "cancel" },
        {
          text: "ÈñãÂßã",
          onPress: () => {
            router.push({
              pathname: "/mock-exam/[examId]",
              params: { examId: exam.id },
            });
          },
        },
      ],
    );
  };

  return (
    <Screen>
      <View style={styles.container}>
        <View style={styles.header}>
          <TouchableOpacity
            style={styles.backButton}
            onPress={() => router.back()}
          >
            <Text style={styles.backButtonText}>‚Üê Êàª„Çã</Text>
          </TouchableOpacity>
          <Text style={styles.title}>Ê®°Êì¨Ë©¶È®ì</Text>
        </View>

        <ScrollView style={styles.content}>
          <Text style={styles.description}>
            Êú¨Ë©¶È®ìÂΩ¢Âºè„ÅÆCBTÊ®°Êì¨Ë©¶È®ì„ÅßÂÆüÂäõ„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Åó„Åæ„Åó„Çá„ÅÜ„ÄÇ
            Âà∂ÈôêÊôÇÈñìÂÜÖ„Å´ÂÖ®ÂïèÈ°å„Å´Âèñ„ÇäÁµÑ„Çì„Åß„Åè„Å†„Åï„ÅÑ„ÄÇ
          </Text>

          {loading ? (
            <View style={styles.loadingContainer}>
              <ActivityIndicator size="large" color="#2f95dc" />
              <Text style={styles.loadingText}>Ê®°Ë©¶„Éá„Éº„Çø„ÇíË™≠„ÅøËæº„Åø‰∏≠...</Text>
            </View>
          ) : (
            mockExams.map((exam) => {
              let structure;
              try {
                structure = JSON.parse(exam.structure_json);
              } catch {
                structure = {
                  section1: { count: 15 },
                  section2: { count: 2 },
                  section3: { count: 1 },
                };
              }
              const totalQuestions =
                (structure.section1?.count || 0) +
                (structure.section2?.count || 0) +
                (structure.section3?.count || 0);

              return (
                <TouchableOpacity
                  key={exam.id}
                  style={styles.examCard}
                  onPress={() => startMockExam(exam)}
                >
                  <View style={styles.examInfo}>
                    <Text style={styles.examName}>{exam.name}</Text>
                    <Text style={styles.examDescription}>
                      {exam.description}
                    </Text>
                    <View style={styles.examDetails}>
                      <Text style={styles.examDetail}>
                        üìù {totalQuestions}Âïè
                      </Text>
                      <Text style={styles.examDetail}>
                        ‚è∞ {exam.time_limit_minutes}ÂàÜ
                      </Text>
                      <Text style={styles.examDetail}>
                        üéØ {exam.total_score}ÁÇπÊ∫ÄÁÇπ
                      </Text>
                      <Text style={styles.examDetail}>
                        ‚úÖ {exam.passing_score}ÁÇπ„ÅßÂêàÊ†º
                      </Text>
                    </View>
                  </View>
                  <View style={styles.startButton}>
                    <Text style={styles.startButtonText}>ÈñãÂßã</Text>
                  </View>
                </TouchableOpacity>
              );
            })
          )}
        </ScrollView>
      </View>
    </Screen>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#f5f5f5",
  },
  header: {
    flexDirection: "row",
    alignItems: "center",
    padding: 20,
    paddingTop: 60,
    backgroundColor: "#fff",
    borderBottomWidth: 1,
    borderBottomColor: "#e0e0e0",
  },
  backButton: {
    marginRight: 16,
  },
  backButtonText: {
    fontSize: 16,
    color: "#2f95dc",
  },
  title: {
    fontSize: 20,
    fontWeight: "bold",
    color: "#333",
  },
  content: {
    flex: 1,
    padding: 20,
  },
  description: {
    fontSize: 16,
    color: "#666",
    marginBottom: 24,
    lineHeight: 24,
  },
  examCard: {
    backgroundColor: "#fff",
    borderRadius: 12,
    padding: 20,
    marginBottom: 16,
    flexDirection: "row",
    alignItems: "center",
    shadowColor: "#000",
    shadowOffset: {
      width: 0,
      height: 2,
    },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  examInfo: {
    flex: 1,
  },
  examName: {
    fontSize: 18,
    fontWeight: "bold",
    color: "#333",
    marginBottom: 8,
  },
  examDescription: {
    fontSize: 14,
    color: "#666",
    marginBottom: 12,
  },
  examDetails: {
    flexDirection: "row",
    flexWrap: "wrap",
  },
  examDetail: {
    fontSize: 12,
    color: "#888",
    marginRight: 16,
    marginBottom: 4,
  },
  startButton: {
    backgroundColor: "#2f95dc",
    paddingHorizontal: 20,
    paddingVertical: 10,
    borderRadius: 8,
  },
  startButtonText: {
    color: "#fff",
    fontSize: 16,
    fontWeight: "bold",
  },
  loadingContainer: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    paddingVertical: 40,
  },
  loadingText: {
    marginTop: 16,
    fontSize: 16,
    color: "#666",
  },
});
