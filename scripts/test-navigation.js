#!/usr/bin/env node
/**
 * ÂïèÈ°å„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Ê©üËÉΩ„ÅÆÂãï‰ΩúÁ¢∫Ë™ç„Çπ„ÇØ„É™„Éó„Éà
 * Step 2.1.6: „Ç´„ÉÜ„Ç¥„É™ÈÅ∏Êäû„ÉªÂïèÈ°å„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Ê©üËÉΩÂÆüË£Ö
 */

console.log('üß™ Step 2.1.6: ÂïèÈ°å„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Ê©üËÉΩÂÆüË£ÖÁ¢∫Ë™ç');
console.log('');

// „Çµ„É≥„Éó„É´ÂïèÈ°å„Éá„Éº„Çø
const SAMPLE_QUESTIONS = {
  journal: [
    { id: 'Q_J_001', category_id: 'journal', question_text: 'ÂïÜÂìÅ200,000ÂÜÜ„ÇíÁèæÈáë„Åß‰ªïÂÖ•„Çå„Åü„ÄÇ', difficulty: 1 },
    { id: 'Q_J_002', category_id: 'journal', question_text: 'ÂïÜÂìÅ300,000ÂÜÜ„ÇíÂ£≤„Çä‰∏ä„Åí„ÄÅ‰ª£Èáë„ÅØÊéõ„Åë„Å®„Åó„Åü„ÄÇ', difficulty: 1 },
    { id: 'Q_J_003', category_id: 'journal', question_text: 'Â£≤ÊéõÈáë150,000ÂÜÜ„ÇíÁèæÈáë„ÅßÂõûÂèé„Åó„Åü„ÄÇ', difficulty: 1 },
  ],
  ledger: [
    { id: 'Q_L_001', category_id: 'ledger', question_text: 'ÁèæÈáëÂá∫Á¥çÂ∏≥„Å´Ë®òÂÖ•„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ', difficulty: 2 },
  ],
  trial_balance: [
    { id: 'Q_T_001', category_id: 'trial_balance', question_text: 'Ë©¶ÁÆóË°®„Çí‰ΩúÊàê„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ', difficulty: 2 },
  ],
};

// „Ç´„ÉÜ„Ç¥„É™ÂêçÂèñÂæóÊ©üËÉΩ„ÅÆ„ÉÜ„Çπ„Éà
const getCategoryName = (category) => {
  switch (category) {
    case 'journal': return '‰ªïË®≥';
    case 'ledger': return 'Â∏≥Á∞ø';
    case 'trial_balance': return 'Ë©¶ÁÆóË°®';
    default: return '';
  }
};

// ÂïèÈ°åID„Åã„Çâ„Ç´„ÉÜ„Ç¥„É™Êé®ÂÆöÊ©üËÉΩ„ÅÆ„ÉÜ„Çπ„Éà
const getCategoryFromId = (questionId) => {
  if (questionId.startsWith('Q_J_')) return 'journal';
  if (questionId.startsWith('Q_L_')) return 'ledger';
  if (questionId.startsWith('Q_T_')) return 'trial_balance';
  return 'journal';
};

// ÈÄ≤ÊçóË®àÁÆóÊ©üËÉΩ„ÅÆ„ÉÜ„Çπ„Éà
const calculateProgress = (currentIndex, totalQuestions) => {
  const current = currentIndex + 1;
  const total = totalQuestions;
  const percentage = total > 0 ? (current / total) * 100 : 0;
  
  return { current, total, percentage };
};

// „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Âà∂Âæ°Ê©üËÉΩ„ÅÆ„ÉÜ„Çπ„Éà
const testNavigation = (category, initialQuestionId) => {
  const questions = SAMPLE_QUESTIONS[category] || [];
  let currentIndex = questions.findIndex(q => q.id === initialQuestionId);
  if (currentIndex === -1) currentIndex = 0;
  
  const canGoPrevious = currentIndex > 0;
  const canGoNext = currentIndex < questions.length - 1;
  
  return {
    questions,
    currentIndex,
    currentQuestion: questions[currentIndex],
    canGoPrevious,
    canGoNext,
    totalQuestions: questions.length,
    progress: calculateProgress(currentIndex, questions.length),
  };
};

console.log('‚úÖ „Ç´„ÉÜ„Ç¥„É™ÂêçÂèñÂæóÊ©üËÉΩÁ¢∫Ë™ç:');
['journal', 'ledger', 'trial_balance'].forEach(category => {
  console.log(`${category} -> ${getCategoryName(category)}`);
});

console.log('\n‚úÖ ÂïèÈ°åID„Åã„Çâ„Ç´„ÉÜ„Ç¥„É™Êé®ÂÆöÊ©üËÉΩÁ¢∫Ë™ç:');
['Q_J_001', 'Q_L_001', 'Q_T_001'].forEach(id => {
  const category = getCategoryFromId(id);
  console.log(`${id} -> ${category} (${getCategoryName(category)})`);
});

console.log('\n‚úÖ ÈÄ≤ÊçóË®àÁÆóÊ©üËÉΩÁ¢∫Ë™ç:');
[
  { current: 0, total: 3 },
  { current: 1, total: 3 },
  { current: 2, total: 3 },
  { current: 0, total: 1 },
].forEach(({ current, total }) => {
  const progress = calculateProgress(current, total);
  console.log(`${current + 1}/${total} -> ${Math.round(progress.percentage)}%`);
});

console.log('\n‚úÖ „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Âà∂Âæ°Ê©üËÉΩÁ¢∫Ë™ç:');
const testCases = [
  { category: 'journal', questionId: 'Q_J_001' },
  { category: 'journal', questionId: 'Q_J_002' },
  { category: 'journal', questionId: 'Q_J_003' },
  { category: 'ledger', questionId: 'Q_L_001' },
  { category: 'trial_balance', questionId: 'Q_T_001' },
];

testCases.forEach(({ category, questionId }) => {
  const nav = testNavigation(category, questionId);
  console.log(`\n${getCategoryName(category)} - ${questionId}:`);
  console.log(`  ÁèæÂú®‰ΩçÁΩÆ: ${nav.currentIndex + 1}/${nav.totalQuestions} (${Math.round(nav.progress.percentage)}%)`);
  console.log(`  ÂïèÈ°åÊñá: "${nav.currentQuestion?.question_text.substring(0, 20)}..."`);
  console.log(`  Ââç„Å´Êàª„Çã: ${nav.canGoPrevious ? 'ÂèØËÉΩ' : '‰∏çÂèØ'}`);
  console.log(`  Ê¨°„Å´ÈÄ≤„ÇÄ: ${nav.canGoNext ? 'ÂèØËÉΩ' : '‰∏çÂèØ'}`);
});

console.log('\n‚úÖ ÂïèÈ°åÁï™Âè∑ÈÅ∏ÊäûÊ©üËÉΩÁ¢∫Ë™ç:');
const journalQuestions = SAMPLE_QUESTIONS.journal;
console.log(`‰ªïË®≥ÂïèÈ°å (${journalQuestions.length}Âïè):`);
journalQuestions.forEach((question, index) => {
  console.log(`  ${index + 1}. ${question.id}: ${question.question_text.substring(0, 30)}...`);
});

console.log('\n‚úÖ „Éó„É≠„Ç∞„É¨„Çπ„Éê„ÉºË°®Á§∫Á¢∫Ë™ç:');
for (let i = 0; i < 3; i++) {
  const progress = calculateProgress(i, 3);
  const bar = '‚ñà'.repeat(Math.round(progress.percentage / 10)) + '‚ñë'.repeat(10 - Math.round(progress.percentage / 10));
  console.log(`${progress.current}/${progress.total}: [${bar}] ${Math.round(progress.percentage)}%`);
}

console.log('\nüéâ Step 2.1.6ÂÆüË£ÖÁ¢∫Ë™çÂÆå‰∫Ü');
console.log('');
console.log('ÂÆüË£ÖÊ∏à„ÅøÊ©üËÉΩ:');
console.log('‚úÖ QuestionNavigation„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà (ÈÄ≤Êçó„Éê„Éº„Éª„Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥„Éú„Çø„É≥)');
console.log('‚úÖ useQuestionNavigation„Éï„ÉÉ„ÇØ (Áä∂ÊÖãÁÆ°ÁêÜ„ÉªÂïèÈ°åÂàá„ÇäÊõø„Åà)');
console.log('‚úÖ „Ç´„ÉÜ„Ç¥„É™Âà•ÂïèÈ°åÁÆ°ÁêÜ');
console.log('‚úÖ ÂïèÈ°åID„Åã„Çâ„ÅÆ„Ç´„ÉÜ„Ç¥„É™Ëá™ÂãïÊé®ÂÆö');
console.log('‚úÖ Ââç/Ê¨°ÂïèÈ°å„Å∏„ÅÆÁßªÂãïÂà∂Âæ°');
console.log('‚úÖ ÂïèÈ°åÁï™Âè∑Áõ¥Êé•ÈÅ∏ÊäûÊ©üËÉΩ');
console.log('‚úÖ ÈÄ≤ÊçóÁéáË®àÁÆó„ÉªË°®Á§∫');
console.log('‚úÖ „Éä„Éì„Ç≤„Éº„Ç∑„Éß„É≥Áä∂ÊÖãÁÆ°ÁêÜ');
console.log('‚úÖ ÂïèÈ°åÁîªÈù¢„Å®„ÅÆÂÆåÂÖ®Áµ±Âêà');
console.log('');
console.log('Ê¨°„ÅÆ„Çπ„ÉÜ„ÉÉ„Éó: Step 2.1.7 Áµ±Âêà„ÉÜ„Çπ„Éà„Éª„Éë„Éï„Ç©„Éº„Éû„É≥„ÇπÊúÄÈÅ©Âåñ');